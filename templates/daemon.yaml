{{- if eq (include "okteto.installDaemonset" .) "true" }} 
{{- $registryUrl :=  include "okteto.registry"  . }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: "{{ include "okteto.fullname" . }}-daemon"
  labels:
    app.kubernetes.io/name: "{{ include "okteto.fullname" . }}-daemon"
    helm.sh/chart: {{ include "okteto.chart" . }}
    app.kubernetes.io/component: "daemon"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ include "okteto.fullname" . }}-daemon"
      app.kubernetes.io/instance: {{ .Release.Name }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 100%
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "{{ include "okteto.fullname" . }}-daemon"
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: "daemon"
        app.kubernetes.io/part-of: "okteto"
{{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
{{- end }}
      annotations:
        app.kubernetes.io/version: "{{ .Release.Name }}-{{ .Chart.Name }}-{{ .Chart.Version }}"
        checksum/secrets: {{ include (print $.Template.BasePath "/dockerconfig-secret.yaml") . | sha256sum }}
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
    spec:
      hostPID: true
      terminationGracePeriodSeconds: 0
      serviceAccountName: default
      {{- if .Values.tolerations.devPool }}
      tolerations:
        - key: "okteto-node-pool"
          operator: "Equal"
          value: "{{ .Values.tolerations.devPool }}"
          effect: "NoSchedule"
      nodeSelector:
        okteto-node-pool: "{{ .Values.tolerations.devPool }}"
      {{- end }}
      initContainers:
      {{- if .Values.overrideRegistryResolution.enabled }}
      - name: node-internal-traffic
        image: busybox
        command:
        - sh
        args:
        - -c
        - "sed -e '/{{ $registryUrl }}/ d' /etc/hosts > /tmp/hosts && cat /tmp/hosts > /etc/hosts && \
        echo $OKTETO_INGRESS_INTERNAL_IP {{ $registryUrl }} >> /etc/hosts "
        env:
          - name: OKTETO_INGRESS_INTERNAL_IP
            value: "{{ include "okteto.ingressprivateip" . }}"
        volumeMounts:
          - name: hostalias
            mountPath: /etc/hosts
      {{- end }}
      {{- if .Values.privateRegistry }}
      - name: registry-configurator
        image: busybox
        command:
          - cp
          - /root/.docker/config.json
          - /var/lib/kubelet/config.json
        volumeMounts:
        - name: dockerconfig
          mountPath: /root/.docker
        - name: kubelet-conf
          mountPath: /var/lib/kubelet
        securityContext:
          privileged: true
      {{- end }}
      {{- if .Values.overrideFileWatchers.enabled }}
      - name: filewatchers
        image: busybox
        securityContext:
          privileged: true
        command:
          - /bin/sh
          - -c
          - "echo {{ int .Values.overrideFileWatchers.maxUserWatches }} > /proc-aux/sys/fs/inotify/max_user_watches && sysctl -w vm.max_map_count={{ int .Values.overrideFileWatchers.maxMapCount }} && sysctl -w fs.aio-max-nr={{ int .Values.overrideFileWatchers.aioMaxNR }}"
        volumeMounts:
        - mountPath: /proc-aux
          name: proc-volume
      {{- end }}
      {{- if .Values.backend.bin.image }}
      - name: bin
        image: {{ .Values.backend.bin.image }}
        securityContext:
          privileged: true
        command:
          - /bin/sh
          - -c
          - "cp /usr/local/bin/* /var/okteto/bin"
        volumeMounts:
          - mountPath: /var/okteto/bin
            name: okteto-bin
      {{- end }}
      {{- if .Values.injectDevelopmentBinaries.enabled }}
      - name: cloudbin
        image: {{ .Values.backend.cloudbin.image }}
        securityContext:
          privileged: true
        command:
          - /bin/sh
          - -c
          - "rm -f /var/okteto/cloudbin/start.sh && cp /usr/local/bin/* /var/okteto/cloudbin"
        volumeMounts:
          - mountPath: /var/okteto/cloudbin
            name: okteto-cloudbin
      {{- end }}
      containers:
        - name: daemon
          image: busybox
          command:
            - /bin/sh
            - -c
            - "tail -f /dev/null"
      volumes:
      {{- if .Values.prepullImages.enabled }}
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
      {{- end }}
      {{- if .Values.overrideFileWatchers.enabled }}
      - name: proc-volume
        hostPath:
          path: /proc
      {{- end }}
      {{- if .Values.injectDevelopmentBinaries.enabled }}
      - name: okteto-bin
        hostPath:
          path: /var/okteto/bin
      - name: okteto-cloudbin
        hostPath:
          path: /var/okteto/cloudbin
      {{- end }}
      {{- if .Values.privateRegistry }}
      - name: kubelet-conf
        hostPath:
          path: /var/lib/kubelet
      - name: dockerconfig
        secret:
          defaultMode: 420
          secretName: "{{ include "okteto.fullname" . }}-dockerconfig"
      {{- end }}
      {{- if .Values.overrideRegistryResolution.enabled }}
      - name: hostalias
        hostPath:
          path: /etc/hosts
      {{- end }}
{{- end}}